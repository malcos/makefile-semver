# input variables and defaults
VERSION_FILE ?= VERSION.data
VERSION_CYCLES ?= alpha beta rc
VERSION_METADATA ?=

# create file if absent, defaults to 0.0.0(-1stcycle.1)
_:=$(or $(strip $(file < $(VERSION_FILE))), $(file > $(VERSION_FILE),0.0.0$(addprefix -,$(and $(word 1, $(VERSION_CYCLES)), $(word 1, $(VERSION_CYCLES)).1))))

# read semver data from file
_sv_data := $(file < $(strip $(VERSION_FILE)))
_sv_mmp := $(subst ., ,$(word 1, $(subst -, ,$(_sv_data))))
_sv_cycle := $(subst ., ,$(word 2, $(subst -, ,$(_sv_data))))

# output variables
VERSION_MAJOR := $(or $(word 1, $(_sv_mmp)), 0)
VERSION_MINOR := $(or $(word 2, $(_sv_mmp)), 0)
VERSION_PATCH := $(or $(word 3, $(_sv_mmp)), 0)
VERSION_CYCLE_NAME := $(word 1, $(_sv_cycle))
VERSION_CYCLE_STEP := $(or $(word 2, $(_sv_cycle)), 1)
VERSION_NUMBER = $(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH)
VERSION_CYCLE = $(and $(VERSION_CYCLE_NAME), $(VERSION_CYCLE_NAME).$(VERSION_CYCLE_STEP))
VERSION_DATA = $(VERSION_NUMBER)$(addprefix -,$(VERSION_CYCLE))
VERSION = $(VERSION_DATA)$(addprefix +,$(VERSION_METADATA))

version.print:
	@echo $(VERSION)

version.nextmajor:
	$(eval VERSION_MAJOR = $(call .increment, $(VERSION_MAJOR)))
	$(eval VERSION_MINOR = 0)
	$(eval VERSION_PATCH = 0)
	$(file > $(VERSION_FILE),$(VERSION_DATA))
	@echo $(VERSION_DATA)

version.nextminor:
	$(eval VERSION_MINOR = $(call .increment, $(VERSION_MINOR)))
	$(eval VERSION_PATCH = 0)
	$(file > $(VERSION_FILE),$(VERSION_DATA))
	@echo $(VERSION_DATA)

version.nextpatch:
	$(eval VERSION_PATCH = $(call .increment, $(VERSION_PATCH)))
	$(file > $(VERSION_FILE),$(VERSION_DATA))
	@echo $(VERSION_DATA)

version.clearcycle:
	$(eval VERSION_CYCLE_NAME = )
	$(file > $(VERSION_FILE),$(VERSION_DATA))
	@echo $(VERSION_DATA)

$(addprefix version.tocycle.,$(VERSION_CYCLES)):
	$(eval _sv_cycle_name = $(lastword $(subst ., ,$@)))
	$(eval VERSION_CYCLE_STEP=$(if $(filter $(_sv_cycle_name),$(VERSION_CYCLE_NAME)),$(VERSION_CYCLE_STEP),1))
	$(eval VERSION_CYCLE_NAME = $(_sv_cycle_name))
	$(file > $(VERSION_FILE),$(VERSION_DATA))
	@echo $(VERSION_DATA)

version.nextcyclestep:
	$(eval VERSION_CYCLE_STEP = $(call .increment, $(VERSION_CYCLE_STEP)))
	$(file > $(VERSION_FILE),$(VERSION_DATA))
	@echo $(VERSION_DATA)

version.release: version.clearcycle

version.next: $(if $(VERSION_CYCLE_NAME), version.nextcyclestep, version.nextpatch)

# support variables (_) and functions (.)
_basewords := I I I I I I I I I I
_maxwords = $(foreach _,$(_basewords),$(foreach _,$(_basewords),$(foreach _,$(_basewords),$(foreach _,$(_basewords),$(_basewords)))))
.increment = $(words $(wordlist 1,$1,$(_maxwords)) I)
